@use './variables' as *;
@use "sass:color" as c;

// Layout Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-row {
  display: flex;
  flex-direction: row;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// Typography Mixins
@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin text-ellipsis-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin font-size($size) {
  font-size: $size;
  line-height: $line-height-normal;
}

@mixin font-weight($weight) {
  font-weight: $weight;
}

// Button Mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-md;
  border: none;
  border-radius: $border-radius-md;
  font-family: $font-family-primary;
  font-size: $font-size-sm;
  font-weight: 500;
  line-height: $line-height-normal;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-fast;
  user-select: none;
  outline: none;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

@mixin button-variant($bg-color, $text-color, $hover-bg-color: null) {
  background-color: $bg-color;
  color: $text-color;

  &:hover:not(:disabled) {
    @if $hover-bg-color {
      background-color: $hover-bg-color;
    } @else {
      background-color: c.adjust($bg-color, $lightness: -10%);
    }
  }

  &:active:not(:disabled) {
    transform: translateY(1px);
  }
}

@mixin button-success {
  @include button-base;
  background-color: var(--color-primary);
  color: var(--color-text-inverse);

  &:hover:not(:disabled) {
    background-color: var(--color-primary-hover);
  }
}

@mixin button-danger {
  @include button-base;
  background-color: var(--color-error-alt);
  color: var(--color-text-inverse);

  &:hover:not(:disabled) {
    background-color: var(--color-error-alt2);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: var(--neutral-250);
  color: var(--color-text-secondary);

  &:hover:not(:disabled) {
    background-color: var(--neutral-400);
  }
}

@mixin button-disabled {
  @include button-base;
  background-color: var(--neutral-200);
  color: var(--neutral-600);
  cursor: not-allowed;
  pointer-events: none;

  &:hover {
    background-color: var(--neutral-200);
    color: var(--neutral-600);
  }
}

// Form Mixins
@mixin input-base {
  width: 100%;
  padding: 0.5rem 0.75rem;
  font-size: 1rem;
  border: 1px solid var(--neutral-400);
  border-radius: 0.375rem;
  font-family: 'Product Sans', $font-family-primary;
  font-weight: 400;
  line-height: $line-height-normal;
  color: var(--neutral-850);
  background-color: var(--color-bg-surface);
  transition: border-color 0.2s, box-shadow 0.2s;
  outline: none;

  &::placeholder {
    color: var(--color-text-muted);
  }

  &:focus {
    border: 1px solid var(--color-primary);
    box-shadow: 0 0 0 2px var(--color-primary-20a);
  }

  &:disabled {
    background-color: var(--neutral-200);
    color: var(--neutral-600);
    cursor: not-allowed;
  }
}

@mixin textarea-base {
  @include input-base;
  height: 80px;
  resize: none;
}

// Shadow Mixins
@mixin shadow($level: 'md') {
  @if $level == 'sm' {
    box-shadow: $shadow-sm;
  } @else if $level == 'md' {
    box-shadow: $shadow-md;
  } @else if $level == 'lg' {
    box-shadow: $shadow-lg;
  } @else if $level == 'xl' {
    box-shadow: $shadow-xl;
  }
}

@mixin drop-shadow($opacity: 0.1) {
  filter: drop-shadow(0px 4px 8px rgba(0, 0, 0, $opacity));
}

// State Mixins
@mixin disabled-state {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

@mixin loading-state {
  position: relative;
  pointer-events: none;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 16px;
    height: 16px;
    margin: -8px 0 0 -8px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
}

// Animation Mixins
@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-in-up($duration: $transition-normal) {
  animation: slideInUp $duration ease-out;
}

@mixin slide-in-down($duration: $transition-normal) {
  animation: slideInDown $duration ease-out;
}

// Responsive Mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == 'xxl' {
    @media (min-width: $breakpoint-xxl) { @content; }
  }
}

@mixin respond-below($breakpoint) {
  @if $breakpoint == 'sm' {
    @media (max-width: $breakpoint-sm - 1px) { @content; }
  } @else if $breakpoint == 'md' {
    @media (max-width: $breakpoint-md - 1px) { @content; }
  } @else if $breakpoint == 'lg' {
    @media (max-width: $breakpoint-lg - 1px) { @content; }
  } @else if $breakpoint == 'xl' {
    @media (max-width: $breakpoint-xl - 1px) { @content; }
  } @else if $breakpoint == 'xxl' {
    @media (max-width: $breakpoint-xxl - 1px) { @content; }
  }
}

// Scrollbar Mixins
@mixin scrollbar-styles($width: 6px, $track-color: #f1f1f1, $thumb-color: #33b469) {
  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $border-radius-sm;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $border-radius-sm;

    &:hover {
      background: c.adjust($thumb-color, $lightness: -10%);
    }
  }

  &::-webkit-scrollbar-corner {
    background: $track-color;
  }
}

// Hover Effects
@mixin hover-lift($distance: 2px) {
  transition: transform $transition-fast;

  &:hover {
    transform: translateY(-$distance);
  }
}

@mixin hover-scale($scale: 1.05) {
  transition: transform $transition-fast;

  &:hover {
    transform: scale($scale);
  }
}

// Dark Theme Mixins
@mixin dark-theme {
  [data-theme="dark"] {
    @content;
  }
}

// Print Mixins
@mixin print-only {
  @media print {
    @content;
  }
}

@mixin print-hidden {
  @media print {
    display: none !important;
  }
}

// Utility Mixins
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Keyframe Animations
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
